python3 tldr_fail_test.py google.mu
About to send a large TLS ClientHello (1472 bytes) to google.mu:443.

The server should respond with a TLS ServerHello, which will be some
byte string beginning with b'\x16\x03\x03'. If it closes the
connection or sends something else, the server is misbehaving.

Sending the ClientHello in a single write:
b'\x16\x03\x03\x04\xba\x02\x00\x04\xb6\x03\x03Y+NH\xdc\x19^F\x97l\x86(!\x8c\x0b\x9d\xf4i\x9c\xfav\x87+.V\xb1\x18\x8e\x90:Cw \xa1\xfa\xac\xf5\xf59\x04\xcaS\x99\xc2{~\x98\x16\xb1\x10\xdb\xea\x15xVW,\x94+\xf21M2V$\x13\x01\x00\x04n\x003\x04dc\x99\x04`y\x89\xb6j\xcd\x17\xbb\xaex\x03#\xdf\x021\x80\xe4\x9d_\x0c\x86\xc0W\\y\xea\xa5\xf4\xca\x1d\xe0XG\x93\xbd\xb6\x92\x04\xaaL\x8e,*\xd0\xe0\xc6\xc2\x9a?k\x9f\x8c\xa2\xb2c\xc6\xf5\xce\xda\x10R\xe29\x97\xc1\xc7\xdc\x00\xf9B\xbci\xfb\x01\x85yFQ\x9d(w\xc0&\xe2\x94\xe0|\x92"\xde\xa8X\xaf\xe6\x1dR\x7f\x82x\x9c]/\xaar\xe3\x163+\xb0y7\xc4\xaaJ\xa0\x83\x8a\xf7n\x0c\x9b\xce6\x17\xca9+\xbd\xd7\x9a\x7fjk\xdf\xc2xN\x8d\x8b#\x89`\x93\x0f\xad\xff\xa6\xaa\xe6cR\xea\x1c\xaf\xd8)&\x02\x12\xea\x91\xa58\x93\x05\xac}\xbf'

Sending the ClientHello in two separate writes:
b"\x16\x03\x03\x04\xba\x02\x00\x04\xb6\x03\x03\x82\xcaF\xea\xef\xd7\xcdb\x80\xb8t\xfd1\x8e\x1f\x0f\x0cJ\xa0B\xe3j<\x83\x04\xed\x03\xcf/\xcf\x977 \xa1\xfa\xac\xf5\xf59\x04\xcaS\x99\xc2{~\x98\x16\xb1\x10\xdb\xea\x15xVW,\x94+\xf21M2V$\x13\x01\x00\x04n\x003\x04dc\x99\x04`\x12C\x07\x87\xae\x1b\xe4\xdb\xe3\xbc\xdd\x7f\xc4b\xdb\xd3f\x00:\x02\xd3\xb0W\x92Y0\x96\t\x0f\xf0\xe9Xe\x1a\xab\n{\xd0l\xb1\x1f\xca-\xaa\xf26>\x01L\x95\x0c\x82\x1b\xa1j\xbb\xa8\xdf\x88\xd2\xa7d@\x13\x84\xfe'\xa5Td\xfa\x94\xc0\xc0M`\xd7\xa9\xe0\xd8\xcf\xe7\x8f\xefA^@\xb517\xca\xc9\xec\xf19\x83\xa4\x80\x85\x15\xb3\xa5\xdcX\xe1\xfb\x18~\x80\xf6\xd9^\x1a\xfb\xa6I\x82\xd4'\xf5\xb1\xd9\xf6#\n\xb0\x14\x94\x93\xfc\xa7\x06t\x8f`E\x1c\x99\x00\xd6\xa6f\xe3\xab\xfa\xcf@\x8b\xb3O\x92\x9f_\xeb\xe9\xb4\xd7;n\xaf\xe5Gt\xcc\x17\t\x8c"

Repeating the process with a smaller ClientHello (250 bytes).
This ClientHello would usually be sent in a single packet, but it
demonstrates that the bug is not triggered by the size of the
ClientHello, but whether it comes in across multiple reads.
(Note this ClientHello is smaller than a ClientHello from browsers
today. This script does not reproduce some padding behavior.)

Sending the ClientHello in a single write:
b'\x16\x03\x03\x00z\x02\x00\x00v\x03\x03\x07\xd0|\xdb{C\xba)K\x18\xa3\xde\xe3R?15tL\x0cL\x15t\xe4\xa9\xa2\xb6P\xcf\xd0\x17\x17 \xa1\xfa\xac\xf5\xf59\x04\xcaS\x99\xc2{~\x98\x16\xb1\x10\xdb\xea\x15xVW,\x94+\xf21M2V$\x13\x01\x00\x00.\x003\x00$\x00\x1d\x00 \x9aw\xa1F\xf4\x1f(8I\xf2)\x07\x9e&mG\x91.\x10V\xa3\x8c\xc2\x003t\xcf\xf7^\rWW\x00+\x00\x02\x03\x04\x14\x03\x03\x00\x01\x01\x17\x03\x03\x101\xa69Ah\x1dJ\xac\xbeH\xf4\xd6\xe9\xdd\x96s\xc5|y\xd1\x9c\xe2\xc6#2\x9d\xc2\x1e/p\x95\xa5S\x1f&\xcay\x08\xd7iX\xa0\xa9AT\xe1\\Fe\xfe\xf8\xb7\xe86~\x11T\tw\xbd%\x08\x0ef\xa1\xaf\xca\xd4$\xb1\x8a\x93p4\x1c\xdd\xb6K=\x9a\xf9\xf8\x9a\x02\xc5\xf2:\xe8~&\xa1\x1cHs\x02\xda\xa6\x13A\xbd|\xc2z\xe5\x99u\xd4\x95\xbb\xe0\x14\xfd\x1d\xf2j\x83\xe0\xec\xed'

Sending the ClientHello in two separate writes:
b"\x16\x03\x03\x00z\x02\x00\x00v\x03\x03\xbc\x10\xf1&\xb2\x01\xdeZ\x91\xb9I\xd8\xf8G\\\x11\xb3\xfd~gCn\xdc\x99\x11\x9f3/\x8d6\x85\xd5 \xa1\xfa\xac\xf5\xf59\x04\xcaS\x99\xc2{~\x98\x16\xb1\x10\xdb\xea\x15xVW,\x94+\xf21M2V$\x13\x01\x00\x00.\x003\x00$\x00\x1d\x00 \xdaPx\xc8n\x1es\xe9b6\xcc\xd25\x8f|AlgfF@\xb6\xdad\x19J\x9a\xd7\xc3\xa5\x15N\x00+\x00\x02\x03\x04\x14\x03\x03\x00\x01\x01\x17\x03\x03\x102ME\xc0\xd1\xa8DF\x1e@\xce|\x94\xf1s\xba\xa9*\x1aA\xb4T\x9f)D\x0b%7\xa0i\x7f\xbf\x08\xde\x1c|\xe8\x07\xfc\xf0\x01\x83\x95\xb8(k\x7f\xce>\x04\xc0x\xb4XA\xc8\xc3\x01dt\xb4\xd4(_\xce\x82\x8c\xe4(&\xf3\x16\xf4\x1c\xf1\x0b63U\xdf}_\xd6\x19)\xd4X\x11`\xdf\xc3\x1d\xdd\xf4uB\xec\xf9n5)\r'\xcd\xd8\xef\x92\xf5\x84\x81\x16\xed\xde\rd \x9f\x0f|"

Google Passed
---------------------------------------------------
python3 tldr_fail_test.py myt.mu
About to send a large TLS ClientHello (1469 bytes) to myt.mu:443.

The server should respond with a TLS ServerHello, which will be some
byte string beginning with b'\x16\x03\x03'. If it closes the
connection or sends something else, the server is misbehaving.

Sending the ClientHello in a single write:
[WinError 10054] An existing connection was forcibly closed by the remote host

Sending the ClientHello in two separate writes:
[WinError 10054] An existing connection was forcibly closed by the remote host

Repeating the process with a smaller ClientHello (247 bytes).
This ClientHello would usually be sent in a single packet, but it
demonstrates that the bug is not triggered by the size of the
ClientHello, but whether it comes in across multiple reads.
(Note this ClientHello is smaller than a ClientHello from browsers
today. This script does not reproduce some padding behavior.)

Sending the ClientHello in a single write:
[WinError 10054] An existing connection was forcibly closed by the remote host

Sending the ClientHello in two separate writes:
[WinError 10054] An existing connection was forcibly closed by the remote host

MyT failed
---------------------------------------------------
python3 tldr_fail_test.py mcb.mu
About to send a large TLS ClientHello (1469 bytes) to mcb.mu:443.

The server should respond with a TLS ServerHello, which will be some
byte string beginning with b'\x16\x03\x03'. If it closes the
connection or sends something else, the server is misbehaving.

Sending the ClientHello in a single write:
b'\x16\x03\x03\x04\xba\x02\x00\x04\xb6\x03\x03K\xe5\xcbo9\x07G\xb0\xb0\xf9\x1d\x81\x9d(\xb3\xd8 \xcc\xb4\xbbe+LR\xfb\x84\xd3\xadN\x9cL\xcc \xa1\xfa\xac\xf5\xf59\x04\xcaS\x99\xc2{~\x98\x16\xb1\x10\xdb\xea\x15xVW,\x94+\xf21M2V$\x13\x01\x00\x04n\x003\x04dc\x99\x04`$^\x85\xa6\xe7\xd2\xd7-g\xf4Ok\x83d\xcb\xaa\x14i\x15\x1b\xa9\xf6\xa7M2\x15z\x8f\x95J\xff\x1c\xc5a\xa1ZR\xbb.\xbcX\xe3\xe5o\r\x06\xd1V\xa0\x98\xeck\xd2?;r\x81\xea\xfe\x9b2\x0c"1\xef&\xf1\xfe>|\xe2\xab\xd5\xceC\xaa\x0e9\xb7$\xa0\xfe1\xcd\xe7\xf4\xa8\x8d`\xdaE\x03\xe6\xef!y\xe8\x9f\xcaN\xd3\xc2\xc5\x16\xed\xaf{\x0f\xcf\xaa\xbc\x1f\xb9\xef"[\x8d\x9c\x119W\x88\xed\xcfVv\xafS\x94\xce\xb5\xa0\xf1(\xe4\xf9\xba;Y\x82\xa8\x04v8\xe7\x881H\xe9W\x94\xe2\xbe\x128\x1c\xf2\xea\xa8$\xcc\xfbv\xfdP~\x19'

Sending the ClientHello in two separate writes:
b'\x16\x03\x03\x04\xba\x02\x00\x04\xb6\x03\x03\x0b\x80\x06\x10\xaa\xb1\x17:\xc7.\xe1 [\x0b\xf5\x14\xb8\xc5\xc6\xf4\\\x10\t\xd4x \xf3\xf4\xc3\x8c\xac\xaf \xa1\xfa\xac\xf5\xf59\x04\xcaS\x99\xc2{~\x98\x16\xb1\x10\xdb\xea\x15xVW,\x94+\xf21M2V$\x13\x01\x00\x04n\x003\x04dc\x99\x04`\xf0\xce\x07\xa4\x80\'u@\xefNw \xd6\xb71k\xd0\xfd\x13#\x15q>\xff\x1d-S\x849\xa9/\x13\xb2\xa4\x94\x9c\x0b(\x8a\xe0\x80/@z\xa1$\xdc\x17&\x81\xcds\x17\xb7\x0e\xaf\x0bL4\x8e\xcd8\xbb<\x0f\x98z\x88iU\xb9\xb9C"\xcb\xf0\x9b\xb038n\xdc\x85\x98\x7f\x98\x10\xff\xc3\xfb\xe0e5I\xab\x05\xbfT\xfd\x946a\xcb\x80f\xdasi\xafS-\xf0\xd5\xaf(\x06\x8dpc@\x91,gP\x15=\x9dPmG\xd7g\xd6_t6(An\x94W\x88\x16\x0b,\xbb\x00G\x062\xb5\xd7\x0f\x99\x02\xca\x15K,\x81,\xb1\xe5\x03_l4'     

Repeating the process with a smaller ClientHello (247 bytes).
This ClientHello would usually be sent in a single packet, but it
demonstrates that the bug is not triggered by the size of the
ClientHello, but whether it comes in across multiple reads.
(Note this ClientHello is smaller than a ClientHello from browsers
today. This script does not reproduce some padding behavior.)

Sending the ClientHello in a single write:
b"\x16\x03\x03\x00z\x02\x00\x00v\x03\x03\xd2\x9et\xa0\xd1\xd0tTt\xd1}\xf0\x0b\x8e+\x03\xe7\x81\x16\xe2\xfe\xad\x8e\x9fI3<\xd2^65B \xa1\xfa\xac\xf5\xf59\x04\xcaS\x99\xc2{~\x98\x16\xb1\x10\xdb\xea\x15xVW,\x94+\xf21M2V$\x13\x01\x00\x00.\x003\x00$\x00\x1d\x00 \xab\x94\x1e\x06JYHa\xc9*\xb1\xc4\xb3]?hV\x7fu\xcb\xd8\xe3 Z\x98\x02\x07\xd4\xef4L\x06\x00+\x00\x02\x03\x04\x14\x03\x03\x00\x01\x01\x17\x03\x03\r0\x1e\x87\xa4h\x19\x03^h\xb1\xf8)W\xed\x04J'\xd0\x065\x04r)Mi\xa4$\xae\xf7\xb2\x00\xb7\n\xdf\x87;\xd3eyQ\xa2>\xef\x0b\x92\x85@\xdf\xb2\x16\xbf\xff\xb57\xbc7PB`\xc1\x94\x9aMMy\x98k@\xbfJ\xff?\xd6_\x05\x0e$\x15M\x1aI\x83\x17%B(\xd3_t\x9e\xb8\x83i\x8a\xc0\\\xca\x98\x15\xc7j.\x87\xb6/7\x86\x97\xe4\xd0\xfd\xeau\xfc\xde;\xeb\x18\x88"  

Sending the ClientHello in two separate writes:
b'\x16\x03\x03\x00z\x02\x00\x00v\x03\x03\x03Z1je\x1c\x9e\xf9\xd3\xbc\xb8;\xb3~\x00\x9b\x9e\xa8\xcdG\xb0\x87\xceX7w\xc1Z\x92\x89\x82\xa7 \xa1\xfa\xac\xf5\xf59\x04\xcaS\x99\xc2{~\x98\x16\xb1\x10\xdb\xea\x15xVW,\x94+\xf21M2V$\x13\x01\x00\x00.\x003\x00$\x00\x1d\x00 \x9f\xd3\x03W\x0e\x18au\xee\x84\xa9\t\x7f/\xc7\x96|*\xce^M\x1al\x91\x18\x11\x14\xdd\xbeF\xb6&\x00+\x00\x02\x03\x04\x14\x03\x03\x00\x01\x01\x17\x03\x03\r0C}\xf7{:\x04/\x180\xc1>\x8b\xe6\x9e\x8f\x8el\x1f\xbf\xe1\x97,\xe7\xddj\xd7\xc1\x05\xec\x86\xbfQ\x15\xbd\t\x0f\xcb\x04\xd3]\xaaO\x1eJ\x8cM\x92>}\xa2\x99j\x84Q\xaf\x03\xa6\x1d\xe1\x07\xa0\x16\xa8\xe9;\xec pT\xcc\x87\xb6\x1fs\x8e\xe2\xa7N\x0f\xa7*\xa2\xc4\xc5\xaf\x8c\x02\x19S\x08\x83\x15\xca\x93k\xd5;\xd6i\xa9\xbf\xd2d\xa1\x8d\xbem-\t\xc5\x91\xff:\xd0,\xba\xb2\xe0'

Mcb Passed
---------------------------------------------------
python3 tldr_fail_test.py okta.com
About to send a large TLS ClientHello (1471 bytes) to okta.com:443.

The server should respond with a TLS ServerHello, which will be some
byte string beginning with b'\x16\x03\x03'. If it closes the
connection or sends something else, the server is misbehaving.

Sending the ClientHello in a single write:
b'\x16\x03\x03\x00A\x02\x00\x00=\x03\x03Fp\r\xc39\xbb\x05\xf8\xeav0/\r\xfc\xf2\x1aPp\xc0b\xfaS\xc7\x85z\x9cK\xa6\x86\xb49~\x00\xc0/\x00\x00\x15\x00\x00\x00\x00\xff\x01\x00\x01\x00\x00\x0b\x00\x04\x03\x00\x01\x02\x00#\x00\x00\x16\x03\x03\x0b\xe3\x0b\x00\x0b\xdf\x00\x0b\xdc\x00\x07\n0\x82\x07\x060\x82\x05\xee\xa0\x03\x02\x01\x02\x02\x10\x02?\xfc\x80k\xb9z\x83\xa7{PT\x19\xd9<\xa20\r\x06\t*\x86H\x86\xf7\r\x01\x01\x0b\x05\x000Y1\x0b0\t\x06\x03U\x04\x06\x13\x02US1\x150\x13\x06\x03U\x04\n\x13\x0cDigiCert Inc1301\x06\x03U\x04\x03\x13*DigiCert Global G2 TLS RSA SHA256 2020 CA10\x1e\x17\r230502000000Z\x17\r240501235959Z0l'

Sending the ClientHello in two separate writes:
b'\x16\x03\x03\x00A\x02\x00\x00=\x03\x03\x97A%<j\xa7\x7fV\x8f\x11\x1a]\xafXH\x9b\xdc\xeb8,e\x89V\x0e2\xc4-,\xd5\xb2\xcb\xc4\x00\xc0/\x00\x00\x15\x00\x00\x00\x00\xff\x01\x00\x01\x00\x00\x0b\x00\x04\x03\x00\x01\x02\x00#\x00\x00\x16\x03\x03\x0b\xe3\x0b\x00\x0b\xdf\x00\x0b\xdc\x00\x07\n0\x82\x07\x060\x82\x05\xee\xa0\x03\x02\x01\x02\x02\x10\x02?\xfc\x80k\xb9z\x83\xa7{PT\x19\xd9<\xa20\r\x06\t*\x86H\x86\xf7\r\x01\x01\x0b\x05\x000Y1\x0b0\t\x06\x03U\x04\x06\x13\x02US1\x150\x13\x06\x03U\x04\n\x13\x0cDigiCert Inc1301\x06\x03U\x04\x03\x13*DigiCert Global G2 TLS RSA SHA256 2020 CA10\x1e\x17\r230502000000Z\x17\r240501235959Z0l'

Repeating the process with a smaller ClientHello (249 bytes).
This ClientHello would usually be sent in a single packet, but it
demonstrates that the bug is not triggered by the size of the
ClientHello, but whether it comes in across multiple reads.
(Note this ClientHello is smaller than a ClientHello from browsers
today. This script does not reproduce some padding behavior.)

Sending the ClientHello in a single write:
b'\x16\x03\x03\x00A\x02\x00\x00=\x03\x03xI\xaa\xd7\x04C\xe5\x1f\x1d\xa7\x96\x83\x8d\x13\x0b|\x87?$H$\x81\xff\xf9\x1d\x1dKA\x16\xd6WE\x00\xc0/\x00\x00\x15\x00\x00\x00\x00\xff\x01\x00\x01\x00\x00\x0b\x00\x04\x03\x00\x01\x02\x00#\x00\x00\x16\x03\x03\x0b\xe3\x0b\x00\x0b\xdf\x00\x0b\xdc\x00\x07\n0\x82\x07\x060\x82\x05\xee\xa0\x03\x02\x01\x02\x02\x10\x02?\xfc\x80k\xb9z\x83\xa7{PT\x19\xd9<\xa20\r\x06\t*\x86H\x86\xf7\r\x01\x01\x0b\x05\x000Y1\x0b0\t\x06\x03U\x04\x06\x13\x02US1\x150\x13\x06\x03U\x04\n\x13\x0cDigiCert Inc1301\x06\x03U\x04\x03\x13*DigiCert Global G2 TLS RSA SHA256 2020 CA10\x1e\x17\r230502000000Z\x17\r240501235959Z0l'

Sending the ClientHello in two separate writes:
b'\x16\x03\x03\x00A\x02\x00\x00=\x03\x03G\x8f\x8bc\xde-\x0cY\xe6\x9b@\x841\xbb\x0bY\xda\x10H\x87g\x00\xb92,A\xc0@~\xe4\x1d\xde\x00\xc0/\x00\x00\x15\x00\x00\x00\x00\xff\x01\x00\x01\x00\x00\x0b\x00\x04\x03\x00\x01\x02\x00#\x00\x00\x16\x03\x03\x0b\xe3\x0b\x00\x0b\xdf\x00\x0b\xdc\x00\x07\n0\x82\x07\x060\x82\x05\xee\xa0\x03\x02\x01\x02\x02\x10\x02?\xfc\x80k\xb9z\x83\xa7{PT\x19\xd9<\xa20\r\x06\t*\x86H\x86\xf7\r\x01\x01\x0b\x05\x000Y1\x0b0\t\x06\x03U\x04\x06\x13\x02US1\x150\x13\x06\x03U\x04\n\x13\x0cDigiCert Inc1301\x06\x03U\x04\x03\x13*DigiCert Global G2 TLS RSA SHA256 2020 CA10\x1e\x17\r230502000000Z\x17\r240501235959Z0l'

okta Passed
---------------------------------------------------
python3 tldr_fail_test.py topfmradio.com
About to send a large TLS ClientHello (1477 bytes) to topfmradio.com:443.

The server should respond with a TLS ServerHello, which will be some
byte string beginning with b'\x16\x03\x03'. If it closes the
connection or sends something else, the server is misbehaving.

Sending the ClientHello in a single write:
b'\x16\x03\x03\x00z\x02\x00\x00v\x03\x033$\x7fA\xfaI\x11\x13q\x8b\xb5?.\x1e\xff\xb8\xff\xddC\x05%p\xd2\xbbl\xa7\xb4\x1d\x82\xcb\x817 \xa1\xfa\xac\xf5\xf59\x04\xcaS\x99\xc2{~\x98\x16\xb1\x10\xdb\xea\x15xVW,\x94+\xf21M2V$\x13\x02\x00\x00.\x00+\x00\x02\x03\x04\x003\x00$\x00\x1d\x00 v-\xe1\xb6n}\xee\xcd,\x8a_\xb3/\xa2\xc5\xa9a%\x90\xf6\x90\xd6\xd7%\xcc<\xba\xa0rcx~\x14\x03\x03\x00\x01\x01\x17\x03\x03\x00\x1b\x8e/\xf3\xa7\xa3Mu\xb0Oc\xb0\xdd\xdb\x96\xcfU\xf01\t6\x13Nu\xb5\\\x99\xb7\x17\x03\x03\x13\x08\x18X,\xf2\x0cr\x1ei\rl%\x1b\x04\xf8Xh\xed\xd8E\xdfrh\xde\x94l-,\x1d\xb9T\x08\xff\x92sH\xb6X\n\xe4W\x9a\x92\x10\xf5\xb8#\xb5M\xa0*l|g\xc2~i\xf6!w\x0b]\x1d\xa4\xc3\xd5\xf2\x9d\xaeN\x00\x17YL\xc7{l]\xe9TU\xf6\x1f\xb2\xc1\t\xa8'      

Sending the ClientHello in two separate writes:
b'\x16\x03\x03\x00z\x02\x00\x00v\x03\x03\xf4\x96\x96P\xef\x1e43\xca$G\x02\xae\xbaU\xe6(\xfe\x07u\xd2\xf6;\x92\xca\x9dj\xa5i\x13{l \xa1\xfa\xac\xf5\xf59\x04\xcaS\x99\xc2{~\x98\x16\xb1\x10\xdb\xea\x15xVW,\x94+\xf21M2V$\x13\x02\x00\x00.\x00+\x00\x02\x03\x04\x003\x00$\x00\x1d\x00 \xed\xef\xae\xa1!\x01\x0f\x98\x14}\xd4\x95B\xe1\x8cO\xca\x19p\xb4!\x19Y\x17\x18\xf3\xa6\xd5>\x8eh8\x14\x03\x03\x00\x01\x01\x17\x03\x03\x00\x1b\x92\x01P\x81\xa5o\x02\xb3\xf6o<]\xcc\xf9D\xec\xa3\xc0<\n\x8f\xd7N`\xe3B\xbd\x17\x03\x03\x13\x08\x04\x81\xe1\x13UK\x8c\xeb]o\xa6\xbf\xa6+b\x87.8\xdf\xc6LV\xf3\xa4\xe5kV6u\xd1}\x19e\xb89H$T\x0889\x92\xc8\x9fN\x19\t\x94\\\x85\'&E"o\x85S\xeb\xd3\xd7\x1c\xbdB\x1d\xd5\x06\xfa\xfb#\xf9\xdc\xd2J\xb5\xb1bx\xb2\x8c\xce}\xbe\xf8\xc3\xf1"'

Repeating the process with a smaller ClientHello (255 bytes).
This ClientHello would usually be sent in a single packet, but it
demonstrates that the bug is not triggered by the size of the
ClientHello, but whether it comes in across multiple reads.
(Note this ClientHello is smaller than a ClientHello from browsers
today. This script does not reproduce some padding behavior.)

Sending the ClientHello in a single write:
b'\x16\x03\x03\x00z\x02\x00\x00v\x03\x03\xeb\x01\xa4\x9e\xb8\xb8\xbf\xb7\xf2\xc9A\x13\xfb0\xb96Li\x10\xa9\x05\xfa!C\x10\x9dsg\xd93\xd7\xd5 \xa1\xfa\xac\xf5\xf59\x04\xcaS\x99\xc2{~\x98\x16\xb1\x10\xdb\xea\x15xVW,\x94+\xf21M2V$\x13\x02\x00\x00.\x00+\x00\x02\x03\x04\x003\x00$\x00\x1d\x00 +_\xf1bf\xf9"\x1dO\xe8-N\\\x7f\x00\n[1A\xe58X\xc8Rwwe\xc9\x1b\xea\xd6\x19\x14\x03\x03\x00\x01\x01\x17\x03\x03\x00\x1bI\xad\x88\xd0\xa1W\xfd\xff\xc9\x8f\xfe\xba\xb6\x93\x99\xe7\x13\xe9\xcf+$[\xcfK\xd1u\xfd\x17\x03\x03\x13\x08\xce\xf1\xb7\xf8\xbe\xeb2e\xb8\xfbJg\xdb\x17\xf1\xfe\x9a\x0b\xaf\x04\xce\x11_#\xbe!\xa8I\xbb6\xe5\xf0Ow\xa5\x05\xe7_\xae\xd9\'\xf587\x92\xc2\xc2\x8d4\xa2\xdf<\xdf\xe9\xa8.t\xb7&\xba\xb5sQr\xee\xc27\xb5n<\x9bna+\x0e\x90s\x11\xe2\x95Ib\x80A\xc0\xd7'

Sending the ClientHello in two separate writes:
b'\x16\x03\x03\x00z\x02\x00\x00v\x03\x03\xd4T\x14\x10\xdd!S\x91\xe4\x1aN\xf2n,\x08nZ9\xdf&\x8bp\x1aHn\xcao\x1e\x08\xddY\xd5 \xa1\xfa\xac\xf5\xf59\x04\xcaS\x99\xc2{~\x98\x16\xb1\x10\xdb\xea\x15xVW,\x94+\xf21M2V$\x13\x02\x00\x00.\x00+\x00\x02\x03\x04\x003\x00$\x00\x1d\x00 \xe9\xc5\xd91\x903l\xacB@\xc1\xc38\x0f\xfap\xd8\x9b\x19<\xa1\xad\xc56\xa0\xb6\x91\x95W\xa3\xbf\t\x14\x03\x03\x00\x01\x01\x17\x03\x03\x00\x1bH\xb7\x93x\xcbV\xbc\xbc\xd6\xf1;\x00\xdc\xce\xb5D2+\x9c\xe3\xe7\x7fv\xcf\x87a \x17\x03\x03\x13\x08\xfc\xf0\xe2J\xc6\x8cJ\n35\xd4I\xa0`/{\x01\x91\xe7i\xbcD>\xbc\x0f4\xf1\x0c\xc9\xf7\xd1\x19Z\x9e*\x9b\xea\x05\xdfJ\xd0\xf2/R\x93\x9eA\xb0&\xc5\x87\r\x89Q\xf08\x92\xeab\xf4py\xe2\x85R\xd0\x91\x01\x95\x91\xc4\xab\xca\x95\xd7\x8b9.V\x01\xbe\x8fG\xa2\xed\xb3'

topfmradio Passed
---------------------------------------------------
python3 tldr_fail_test.py freshdesk.com
About to send a large TLS ClientHello (1476 bytes) to freshdesk.com:443.

The server should respond with a TLS ServerHello, which will be some
byte string beginning with b'\x16\x03\x03'. If it closes the
connection or sends something else, the server is misbehaving.

Sending the ClientHello in a single write:
b'\x16\x03\x03\x00z\x02\x00\x00v\x03\x03!\x03K\xa9(\xedaom\r`\xf5\x0b\xb8\x9c\x95(\xbe\xf8;\xaau\xef\xe7\x1b\xde\x1e\x00z\xa4\x19i \xa1\xfa\xac\xf5\xf59\x04\xcaS\x99\xc2{~\x98\x16\xb1\x10\xdb\xea\x15xVW,\x94+\xf21M2V$\x13\x01\x00\x00.\x00+\x00\x02\x03\x04\x003\x00$\x00\x1d\x00 \x91\xc5\xd1\x98\x93\x0fA+\xb5\xd3Z\xf3\x9e?;L\x8b/\xedI\xb9"G!lU?yE\xba\xfak\x14\x03\x03\x00\x01\x01\x17\x03\x03\x00\x1b\xb4\xbd\xca\xd1\xe8\x06\xd7b\xaa0\xeb>bk3\x87+\x1d_\xef7\x88B/,\xbb\x07\x17\x03\x03\x13{\x08Z4\x1fs\x1a\xc2m\xf4\x13\x9fH5\xd0\xfa\xa45}\xe45n\x10_\x08\x81\x98D\x14\xce\xd7\xb78:@\x06\x8d\xe8"U\x99\xa0\xde\x18\xe4\x04\'g\xd2\xbd}\xcbt\xc9\n\xafM\xb9:\xe8\x9e\x8bT\xd6\xbe\xd5K\xda\xa9\x10\xedD\xaa\x99/\rF\x1c\xce\xc3HkC\x7f6\x96\xc2'

Sending the ClientHello in two separate writes:
b"\x16\x03\x03\x00z\x02\x00\x00v\x03\x03\x82D4\xedWMwP:eT\xef\xb0/\xbf\xff\x16f_bO\x0f\x7f\x16\x99\x00\xad\xca\xe1\xc8\xf3\xd8 \xa1\xfa\xac\xf5\xf59\x04\xcaS\x99\xc2{~\x98\x16\xb1\x10\xdb\xea\x15xVW,\x94+\xf21M2V$\x13\x01\x00\x00.\x00+\x00\x02\x03\x04\x003\x00$\x00\x1d\x00 G\xa5\xfa\xed\xf1\xa6\xbah=\xd8\xb5}\xe4\r\xe5\x12\xa5;\xcf\x11\xc9\x81p'\xe7\xe1\xe5\x7f\x16\xb6\xe2J\x14\x03\x03\x00\x01\x01\x17\x03\x03\x00\x1b\xe1\\\x9a/\xc3\x81\x81L\xe9;\xdd\xd7\xc0\x95\xfc4\x00~\xb2\x8c9\x9e\x98\xa2\xed\xa6\xd8\x17\x03\x03\x13{\xca\xbb\xeb'\xeb\xc3\xcaz\xa2%\xe5\x83\x84D\xdc\xecI$\x98\xbc\xa8\xad@\xcf\xbb\xbd:\n\xa8^\xb1\xbdK:\xaf9\xc4\xcd\x04Fg\x982=\xc03\xe3\x99\x08U&\xeb\x90\x92\xf7e\x11\xd9\xadj\xc5\x9e\xce:\xac\xc5.\xb2\x955\xbbCi\xda?L4\x84O\xf13\xfe\x05}%\xeb"

Repeating the process with a smaller ClientHello (254 bytes).
This ClientHello would usually be sent in a single packet, but it
demonstrates that the bug is not triggered by the size of the
ClientHello, but whether it comes in across multiple reads.
(Note this ClientHello is smaller than a ClientHello from browsers
today. This script does not reproduce some padding behavior.)

Sending the ClientHello in a single write:
b'\x16\x03\x03\x00z\x02\x00\x00v\x03\x03.\xd8\xb7(\xd2\xb1\x94\xb5\xac\xb7z\xb9\xa3\x7f\xcd\xcbsX\xc8;\xea\x83M\x9d\x10\xd0\xcd5m\x11X\' \xa1\xfa\xac\xf5\xf59\x04\xcaS\x99\xc2{~\x98\x16\xb1\x10\xdb\xea\x15xVW,\x94+\xf21M2V$\x13\x01\x00\x00.\x00+\x00\x02\x03\x04\x003\x00$\x00\x1d\x00 \x18buK\xa6\x7f\xd5\xd1zB\xe4\xe2p\xf4\xb3\xeek\xe8\x02:Jm\x93\x04S\t\x1d\x9b\xa0\xef\xfaD\x14\x03\x03\x00\x01\x01\x17\x03\x03\x00\x1b7\xfd\xf1&N\x93D\xd7\xd4\x8d\x03\x9b\xcf\x93\xe9\'\x9at\xce\xb0<A\xb2"7\x9d\xde\x17\x03\x03\x13{I\xdau\xec\x96\x936>7\xa0\x83\xed-^\xf7n\'\x90\xefy\x8b\x98N\xb0{\x15-l&\xd7\xc4\xe5\x9bi\xceC\xa8\xbb\x17\x8f\x9f\xe9\x8c\x15\x15\x9a\x10\xacH\x83\xe3\xec\xe5\x87\xe0\x10m\xf7\xf6*\x11\xab\x143\xa9\x1f\xec\xa5\x15\xbb\xa5C\x81\xc9\xfa{|\xc1\x04E\xa6~\x8f\xf9\xcb\x15'

Sending the ClientHello in two separate writes:
b'\x16\x03\x03\x00z\x02\x00\x00v\x03\x03\xf4Ui\xd0\xe1\n\xe7\x19\xf1k\xec\n\x0fv\xae\xdf%/.\x84(\x1e\xda\r\x06\x89\xbb9_0\xd6l \xa1\xfa\xac\xf5\xf59\x04\xcaS\x99\xc2{~\x98\x16\xb1\x10\xdb\xea\x15xVW,\x94+\xf21M2V$\x13\x01\x00\x00.\x00+\x00\x02\x03\x04\x003\x00$\x00\x1d\x00 j\xd0p\x8c\x9a\xd9\xed\x95\xb0\x05\xc9\x06\xcf\x88\xc7\xf3\xd9\xb9w\x81\x9c0{`1JK\xd1\xb1\x10hz\x14\x03\x03\x00\x01\x01\x17\x03\x03\x00\x1bQn\xc6\xf2\xc7\xe6\x86D\xcd\xcd.6\xb5\xe6\xc1\x8d\xef\xcf\x9a\xbe\x9c\x06\\\x15\x1d\xd9\x8a\x17\x03\x03\x13{6\xd1\xcf\xd0\x9dV\xbd\xe2",\x97w\x96\xf1\xc2\x89\xbd\xe4\xf6lR\xb0\x1c\xf6b\xb3\xba]\x87\x05\x0e;\xf7\xb7\xaa\xe6s\x95\x00\xeb\x97\x0b\xfb\xc2*pb\\\x04\xe4?\x8e\x17wR\x876\x18Q.\xb6\xbd\xd9\xfb\x04\x8c\x84\xbdOz\xccY\xcc\xb9\\\xb3\xc6\\\x15\xb5\xb9\x14\xc0\xde\x85\xec'

freshdesk Passed
---------------------------------------------------
python3 tldr_fail_test.py govmu.org
About to send a large TLS ClientHello (1472 bytes) to govmu.org:443.

The server should respond with a TLS ServerHello, which will be some
byte string beginning with b'\x16\x03\x03'. If it closes the
connection or sends something else, the server is misbehaving.

Sending the ClientHello in a single write:
b'\x16\x03\x03\x00A\x02\x00\x00=\x03\x03\x8c8M\x05S\xb4\xf30t\x02\xbcs\xb4\xcc,\x16\x98N\xb3k\x0fm8\xac\x11]}@\xa7W\xba\xaa\x00\xc0/\x00\x00\x15\xff\x01\x00\x01\x00\x00\x00\x00\x00\x00\x0b\x00\x04\x03\x00\x01\x02\x00\x17\x00\x00\x16\x03\x03\x0b\xd3\x0b\x00\x0b\xcf\x00\x0b\xcc\x00\x06\xfa0\x82\x06\xf60\x82\x05\xde\xa0\x03\x02\x01\x02\x02\x10\r\x0f\xde"LW\xfenmH%u@\xc6\x9c\x150\r\x06\t*\x86H\x86\xf7\r\x01\x01\x0b\x05\x000Y1\x0b0\t\x06\x03U\x04\x06\x13\x02US1\x150\x13\x06\x03U\x04\n\x13\x0cDigiCert Inc1301\x06\x03U\x04\x03\x13*DigiCert Global G2 TLS RSA SHA256 2020 CA10\x1e\x17\r231017000000Z\x17\r241116235959Z0~'

Sending the ClientHello in two separate writes:
b'\x16\x03\x03\x00A\x02\x00\x00=\x03\x03\x8dm\xf0!\xad^\x03p0\xa8\xf93g\xa8$\x80E\x8a\xd9g\xd0\xf1\xb5\xb5\xa0\x1f.\xda\xf2f\x08?\x00\xc0/\x00\x00\x15\xff\x01\x00\x01\x00\x00\x00\x00\x00\x00\x0b\x00\x04\x03\x00\x01\x02\x00\x17\x00\x00\x16\x03\x03\x0b\xd3\x0b\x00\x0b\xcf\x00\x0b\xcc\x00\x06\xfa0\x82\x06\xf60\x82\x05\xde\xa0\x03\x02\x01\x02\x02\x10\r\x0f\xde"LW\xfenmH%u@\xc6\x9c\x150\r\x06\t*\x86H\x86\xf7\r\x01\x01\x0b\x05\x000Y1\x0b0\t\x06\x03U\x04\x06\x13\x02US1\x150\x13\x06\x03U\x04\n\x13\x0cDigiCert Inc1301\x06\x03U\x04\x03\x13*DigiCert Global G2 TLS RSA SHA256 2020 CA10\x1e\x17\r231017000000Z\x17\r241116235959Z0~'

Repeating the process with a smaller ClientHello (250 bytes).
This ClientHello would usually be sent in a single packet, but it
demonstrates that the bug is not triggered by the size of the
ClientHello, but whether it comes in across multiple reads.
(Note this ClientHello is smaller than a ClientHello from browsers
today. This script does not reproduce some padding behavior.)

Sending the ClientHello in a single write:
b'\x16\x03\x03\x00A\x02\x00\x00=\x03\x03\xcc\x00\x99\xb5\xe3M\xc4\xab\x8e\xed\xe3\xfb1\xb6V\xb5\xa5\x9bY hJX\x13\x87w`b_\xc2\xea\xec\x00\xc0/\x00\x00\x15\xff\x01\x00\x01\x00\x00\x00\x00\x00\x00\x0b\x00\x04\x03\x00\x01\x02\x00\x17\x00\x00\x16\x03\x03\x0b\xd3\x0b\x00\x0b\xcf\x00\x0b\xcc\x00\x06\xfa0\x82\x06\xf60\x82\x05\xde\xa0\x03\x02\x01\x02\x02\x10\r\x0f\xde"LW\xfenmH%u@\xc6\x9c\x150\r\x06\t*\x86H\x86\xf7\r\x01\x01\x0b\x05\x000Y1\x0b0\t\x06\x03U\x04\x06\x13\x02US1\x150\x13\x06\x03U\x04\n\x13\x0cDigiCert Inc1301\x06\x03U\x04\x03\x13*DigiCert Global G2 TLS RSA SHA256 2020 CA10\x1e\x17\r231017000000Z\x17\r241116235959Z0~'

Sending the ClientHello in two separate writes:
b'\x16\x03\x03\x00A\x02\x00\x00=\x03\x03] \xd6\x8e[\x91z$Cv-B\xa0\xa9\xfcvaZ2\xc6\xb8\x10\xe8\xe7K5&\x16\xb1\xe2\x04&\x00\xc0/\x00\x00\x15\xff\x01\x00\x01\x00\x00\x00\x00\x00\x00\x0b\x00\x04\x03\x00\x01\x02\x00\x17\x00\x00\x16\x03\x03\x0b\xd3\x0b\x00\x0b\xcf\x00\x0b\xcc\x00\x06\xfa0\x82\x06\xf60\x82\x05\xde\xa0\x03\x02\x01\x02\x02\x10\r\x0f\xde"LW\xfenmH%u@\xc6\x9c\x150\r\x06\t*\x86H\x86\xf7\r\x01\x01\x0b\x05\x000Y1\x0b0\t\x06\x03U\x04\x06\x13\x02US1\x150\x13\x06\x03U\x04\n\x13\x0cDigiCert Inc1301\x06\x03U\x04\x03\x13*DigiCert Global G2 TLS RSA SHA256 2020 CA10\x1e\x17\r231017000000Z\x17\r241116235959Z0~'

govmu.org Passed
---------------------------------------------------
python3 tldr_fail_test.py lexpress.mu
About to send a large TLS ClientHello (1474 bytes) to lexpress.mu:443.

The server should respond with a TLS ServerHello, which will be some
byte string beginning with b'\x16\x03\x03'. If it closes the
connection or sends something else, the server is misbehaving.

Sending the ClientHello in a single write:
b'\x16\x03\x03\x00z\x02\x00\x00v\x03\x03e\xc6\x9cS?!\xbc\xf0rn\x13\xad\xab\x83\xde\xd7\x08\x18\x9eb\xb4d\xd9Y\xd1^\xe0\xc4%\xee \xf3 \xa1\xfa\xac\xf5\xf59\x04\xcaS\x99\xc2{~\x98\x16\xb1\x10\xdb\xea\x15xVW,\x94+\xf21M2V$\x13\x01\x00\x00.\x00+\x00\x02\x03\x04\x003\x00$\x00\x1d\x00 *D\xe6\xfe,\x93}L_Rn\xb6r{\xee\xc8\t\xe4\x8e\xe6\xa7\x1f+s\xe2\x06\xa6i\xe8\x104u\x14\x03\x03\x00\x01\x01\x17\x03\x03\x00\x1b\x8d<\xb0{(\xbeg\x80oR\xab\x02\rw\xd6\xfe\x80\xe0P\x82\x9e\xcd\x92\xbe\xe0?u\x17\x03\x03\x11\xfa\xd9\xb3\xaa\x99`+\xfe\\\t\x80\x8b8\x172\xfaVfW\x16~\xfd\xa9k|T\xdb\x80\xd1b_`B\xfa\x99\xca\xf9\xdc\xfb\xc0\xb4\xd4~\xa5`v`\xe5\xcf\xb6\xcf\x80\xf8XO\xebBh\x93:E\x82y\x0f\xcc\xf7\x97\x83\xcd{\xae{6\x87[\xa8\x1e\xa3\xd8;\r\xabiY\n\xe1R'

Sending the ClientHello in two separate writes:
b'\x16\x03\x03\x00z\x02\x00\x00v\x03\x03\xeb\xff\x00\xaf\xcd\x01\x94\x05\x19\x85!\xdfd\x12*R\x16b\xb5\xd4\xd4\x89\xcc\x89\xdf\x16\x8f\x80Q\xe0\x03y \xa1\xfa\xac\xf5\xf59\x04\xcaS\x99\xc2{~\x98\x16\xb1\x10\xdb\xea\x15xVW,\x94+\xf21M2V$\x13\x01\x00\x00.\x00+\x00\x02\x03\x04\x003\x00$\x00\x1d\x00 \xe3\xdfl1\xa0\x1e\xb2\\\xefh+}g\xde\xfa\x11\x14\x03\xba\xc3\xb2r\x0b`\xa2\xd5Y<\xb8\x146L\x14\x03\x03\x00\x01\x01\x17\x03\x03\x00\x1b\xcb\xdd\xab\xd6\xa9W{g\xe5\xfb\xe7\xa3\xa5\xd0.\x7f\x9fh\x11l\xfc\xed-~k\xedv\x17\x03\x03\x11\xfa\xbe\x8a\xbb\xe0e\x84S`\xc8\x99*\xeeSN#u\xadL\xca\x8abt9\x12}z[|\xbaj[\x94\xb0l\xb6\xfd^O\x14\x92\xd0\x0c\x0fC\xaa\xeat\xcf\xa3\xa6\xfe\x9d\xd0\x81@O*e\xc89\x17\xbc\xdb\x19\xcf\xad\xc8\n1h\xa1\xecHC3T\x16\x16\xe2zq\x9d\x9f\x06.V'

Repeating the process with a smaller ClientHello (252 bytes).
This ClientHello would usually be sent in a single packet, but it
demonstrates that the bug is not triggered by the size of the
ClientHello, but whether it comes in across multiple reads.
(Note this ClientHello is smaller than a ClientHello from browsers
today. This script does not reproduce some padding behavior.)

Sending the ClientHello in a single write:
b"\x16\x03\x03\x00z\x02\x00\x00v\x03\x03\x05\x89-O\xbc8M\x00\xbb_k\xdeq#\xd1\xad@2#t\xeee36\xdf$q}\xaeL\x97\x08 \xa1\xfa\xac\xf5\xf59\x04\xcaS\x99\xc2{~\x98\x16\xb1\x10\xdb\xea\x15xVW,\x94+\xf21M2V$\x13\x01\x00\x00.\x00+\x00\x02\x03\x04\x003\x00$\x00\x1d\x00 \xcc\xac\x99G\xbe=\x1d/\xdc\xe3\x8b)\x17\xd9\x17\x1b\x18\x8f\x93\xe4\xf3v'\x9c0B\xcc\x9e\xc5+\xac\x18\x14\x03\x03\x00\x01\x01\x17\x03\x03\x00\x1b\xa9\x18J.\xf9l\xf2o\xf7\x11\xc5Xz\x92I\xa6\x88c\x1e4\xf8Lk\xd8\xa1O\xbd\x17\x03\x03\x11\xfa\xb5\x92\x102\x8e\xa2\xac\xf5\xd9T;T\xf7\n\xbd~P\x0c\x96\x90V\x01\x1ayC\xb5\xa6\x14\x96T\xa3\x82W\x04_\x8c\xc1\xb2Lg\xd0\xc0\x92\xdf\x0e\xbd\x14\xeb\xce9If\xab_\xab\x88\xcb\xbc\xaex{4\xcb\xac\xb5o5;\xab5\x86\x08_\x19\xa2~\xbb\x98\x10nB\xf1\x1eOH{"

Sending the ClientHello in two separate writes:
b'\x16\x03\x03\x00z\x02\x00\x00v\x03\x03\x9eA\x7fd\t\xe7(\xce\xbd\x95\x92\xddaa>z\x0c\xb6\xe9\xc0\xe4\xa1i\xe7\\N\xbf\xfc\xfd\xfd\xa0\x8d \xa1\xfa\xac\xf5\xf59\x04\xcaS\x99\xc2{~\x98\x16\xb1\x10\xdb\xea\x15xVW,\x94+\xf21M2V$\x13\x01\x00\x00.\x00+\x00\x02\x03\x04\x003\x00$\x00\x1d\x00 q^"\xa6S\xadk\xeaW\xdde$\xad\xdc\x04\xfc\x01b\xc0\xc6%\xbd\x0b\x8f\xe4$\xde\xdb\x94\'\xbeC\x14\x03\x03\x00\x01\x01\x17\x03\x03\x00\x1b(ZS\xf2\xc8\x9e\xc3ku\t\xfc3\x16E\x0f\xc9\xf0\xad\xc6\xce9\x8dv=~\xb3k\x17\x03\x03\x11\xfa\xc0\xdcM&\xa0D\xc1\xcaB\x04\x95\xb5\xdb\xa0\xf4|z\xc3\x97\x98\x98\xee\x83\xca\'\x03\xd6s\xf8\xc2V>\xa8m\xfa\xbd\xb8\x86:jbW\xeev\xe1\xb3&\xd6\x85\x8aPj\x19AZ\xabYn\xf7\x02\x13\'Y\xdf\x98\x9a\x95\xd5&\xf2\x89Q2\xe9`\xbb\r\xca\x82\xc3\x06\x03\x08$\x0e\xd5'

lexpress Passed
---------------------------------------------------
python3 tldr_fail_test.py inside.news
About to send a large TLS ClientHello (1474 bytes) to inside.news:443.

The server should respond with a TLS ServerHello, which will be some
byte string beginning with b'\x16\x03\x03'. If it closes the
connection or sends something else, the server is misbehaving.

Sending the ClientHello in a single write:
b'\x16\x03\x03\x00z\x02\x00\x00v\x03\x03\xa6\xb3@L\xb6\x8d\xe2L\xfa\xc9\xea\x02\xc3\xc1U\xc9\x8e\xa7\xc8\xcfYf$\x02X\xd0\x87\xc3XM\xc6\xde \xa1\xfa\xac\xf5\xf59\x04\xcaS\x99\xc2{~\x98\x16\xb1\x10\xdb\xea\x15xVW,\x94+\xf21M2V$\x13\x01\x00\x00.\x00+\x00\x02\x03\x04\x003\x00$\x00\x1d\x00 $yJ\xa4\xa1B%\xaa\xf5l\xc0\x19)T\xf9\xe6z=C>\xc0\x02\x8fN,C\x10<\xccL\x13!\x14\x03\x03\x00\x01\x01\x17\x03\x03\x00\x1b\xd8\xde\xc0H\xfd\xee\xd5\xd0\xecG\xa6 Z?\xa2\x93\xe7,A\xb9\xfb\xfe\x0c\xcd\xce\xd9\x18\x17\x03\x03\x0fG\x16c.\xb8\xef\x94\x801C\x8a_$\x08\xff/dC\n\xa4E\x0c\x15\x0cW\x8f$n\xcd\x9a\xcb\xd4\xdd&\x0c\x050\x142\xc6\x8fz_4\xa2}{\x07\xe9\xdbo\xc1+$l\x97\xf5\x05>!\xeb\xe0\xf0l\xd1\xfe\x7f\xd4.b?J~Q\xb4\xacZ\x94\x8e\xda\xccyn\x14\xd4K7'

Sending the ClientHello in two separate writes:
b'\x16\x03\x03\x00z\x02\x00\x00v\x03\x03\x8eh\xac\xf0X\x7fq]\xea\xc1\x0e\xbd\xa6$\xd6\xb8A\xa8\x81\xb5$\xbea\xe7\x1c\x04\xef\xe4\x82\xff\x1d\x0e \xa1\xfa\xac\xf5\xf59\x04\xcaS\x99\xc2{~\x98\x16\xb1\x10\xdb\xea\x15xVW,\x94+\xf21M2V$\x13\x01\x00\x00.\x00+\x00\x02\x03\x04\x003\x00$\x00\x1d\x00 i\xd4\x91(\x91\xae\x9b\x12\xc4\x98O\xa5D\xd1T\xf5\x93\xb0\'\xc7E\xa9\xd2]\xed\x02\xba\x96Q\xde\xcf0\x14\x03\x03\x00\x01\x01\x17\x03\x03\x00\x1b\xcc\xb3>\x94\x0c\xf0sbx\x8ad\xf1\xf6\x05"\xef\x17\xfe\xf0)\xee\xacQ\xdbQ\xb8\x85\x17\x03\x03\x0fG\xbd7A\x1d\xd0D!4~\xcbn\xd4\xb8\x16>8S\xbb\x0b\xfd\xe4\x85\xd9\x7f\x83H\xb8hJY\xfc\xd4\xcc\xa0\t\xaeg\xc6N\x80+\x06X\xf8h\xbf\x82\n+\x9fb\xfc\xfd1a[\xa2-R$\xa5ar\x06\xa3j\x12\xb1\xaa[\t\xe7\xf4\x87\xdf\x88\xe9\xad\\\xc6\xe3(\xb3I~.'

Repeating the process with a smaller ClientHello (252 bytes).
This ClientHello would usually be sent in a single packet, but it
demonstrates that the bug is not triggered by the size of the
ClientHello, but whether it comes in across multiple reads.
(Note this ClientHello is smaller than a ClientHello from browsers
today. This script does not reproduce some padding behavior.)

Sending the ClientHello in a single write:
b'\x16\x03\x03\x00z\x02\x00\x00v\x03\x03\x98\x18=c\xc4\xbd\xdd\xab\x01Ac\xd7I\x16\xe4\x9b<\xce&\xa5\x17\x8b\xdc\xb4\xe8\x18J\xf40\xf3\x00\xae \xa1\xfa\xac\xf5\xf59\x04\xcaS\x99\xc2{~\x98\x16\xb1\x10\xdb\xea\x15xVW,\x94+\xf21M2V$\x13\x01\x00\x00.\x00+\x00\x02\x03\x04\x003\x00$\x00\x1d\x00 \xa6\x98\xc8\xf9\x92\xd7\xfc\xec`4\xa3\x162\x80mi3\xe5\x1bVx\x93\x193\x1e\xc6\x12\xa5\xe7\xf40?\x14\x03\x03\x00\x01\x01\x17\x03\x03\x00\x1b>\x95\x80\x9d\x15\xd6\xe7\x9a!\xf5h\xd9I\xa7!7J\x06LH\x94"&\xdfQ\xda\xe9\x17\x03\x03\x0fG\x12t\xa7\x0fWT\r\xaa/\xd3\x97\x907\x07\xb0\xd4\x97\xcd\x95``\xf1-\xda\x14\xa9\xc0\xbe\xb0\xf0{\x86z\x10\x08\xab\xaf\xbf\xcej\xbbFdC`\x06C\x7f\xd88\xf3\'\xb22\x96\x0ci\xc1\xe9\xa8\\(\x0buu\xbe"@\xce\xa9d@\x1d\xf4<DQ\x9f\xca(\x11\x0e\xa3\xc9B\x1c'

Sending the ClientHello in two separate writes:
b'\x16\x03\x03\x00z\x02\x00\x00v\x03\x03t\xaak\xd2\x16>\xf1g\xa8\x9e\xdeM}<\xde\xd1s)\xe1\x06Y\x96A\xc5}\x07\x818\x7fM\x19= \xa1\xfa\xac\xf5\xf59\x04\xcaS\x99\xc2{~\x98\x16\xb1\x10\xdb\xea\x15xVW,\x94+\xf21M2V$\x13\x01\x00\x00.\x00+\x00\x02\x03\x04\x003\x00$\x00\x1d\x00 \xc4\xec\xe8k\x98\xd3B\x99\xdc\xc9\x9eJ\x10\xf7\x83\x88B\x0b\x17\x96\xb4r\x18+\xa7\xd8\xab\x04\xba\x8dkW\x14\x03\x03\x00\x01\x01\x17\x03\x03\x00\x1b\x1ay\xbc}J7\xf8\xee0\x87DI\xb3\xbdg\x8c\xe0\x0b\xd3\x98\xae\xd5\xd1\x8b\xc1G\x1a\x17\x03\x03\x0fG$\xc0\x1f\x1c\'"\xe3\x98\xc3H&y\x13\xc6\x92\xa4\x15\x1b(\x07\xe8f\x83\x83m\n\x9d9h\xf7\xab\x04\xd0\xf2\xc2l\xa9\'C\x90\x13\xae\x1f@\x9f\x9cc\xae\xc2\xa1\x908\xbb\xf1\xc0%+9\xc8E\xa4\xa5\xe9\xa9_D\xa0d\x95mz\xcfX\xda\xb6\xd6\xd8\xae\x8fM$\x9e\xa4\x08\x81\xdd'

inside.news Passed
---------------------------------------------------
python3 tldr_fail_test.py intnet.mu
About to send a large TLS ClientHello (1472 bytes) to intnet.mu:443.

The server should respond with a TLS ServerHello, which will be some
byte string beginning with b'\x16\x03\x03'. If it closes the
connection or sends something else, the server is misbehaving.

Sending the ClientHello in a single write:
b'\x16\x03\x03\x00Q\x02\x00\x00M\x03\x03AC4F62C7352ADCED6FC835D495458DDF \x04\xde\x81\x1be\x81<Y\n\xa3\xc1\x91\x8f\xdfz\xca\x9f^N\xae\xc5\xa5\xce\xa2\xd3\x87\xe3\xe9\x16\xf3Q\x9c\x00/\x00\x00\x05\xff\x01\x00\x01\x00'

Sending the ClientHello in two separate writes:
b'\x16\x03\x03\x00Q\x02\x00\x00M\x03\x03C529C490000856637F73E33E38E2024F \x04\xde\x81\x1fe\x81<ZR\x9c\x1d\xd5\xcc%5\xe3\xc9\x0f\xf2\xb08\x00\xf0\xf7\xb4s|\x91\xbf9;\x88\x00/\x00\x00\x05\xff\x01\x00\x01\x00'

Repeating the process with a smaller ClientHello (250 bytes).
This ClientHello would usually be sent in a single packet, but it
demonstrates that the bug is not triggered by the size of the
ClientHello, but whether it comes in across multiple reads.
(Note this ClientHello is smaller than a ClientHello from browsers
today. This script does not reproduce some padding behavior.)

Sending the ClientHello in a single write:
b'\x16\x03\x03\x00Q\x02\x00\x00M\x03\x037458F21F5CB9B58589D8743053E8C151 \x04\xde\x81 e\x81<Z\xeb\xf4\x89\xae0(\xefjM*\xb9_7D\xebG\x9c\xfd\xa74\t-^\x85\x00/\x00\x00\x05\xff\x01\x00\x01\x00'

Sending the ClientHello in two separate writes:
b"\x16\x03\x03\x00Q\x02\x00\x00M\x03\x03695DF319A1791355A02E5DDE14ABAE09 \x04\xde\x81*e\x81<[0'c`\xbag*\xf8\xae\xcav`\x97\xf1\xaap\xa6&\x12\x1f\x94\xe5\xcc\xb0\x00/\x00\x00\x05\xff\x01\x00\x01\x00"

intnet.mu Passed
---------------------------------------------------
python3 tldr_fail_test.py priceguru.mu
About to send a large TLS ClientHello (1475 bytes) to priceguru.mu:443.

The server should respond with a TLS ServerHello, which will be some
byte string beginning with b'\x16\x03\x03'. If it closes the
connection or sends something else, the server is misbehaving.

Sending the ClientHello in a single write:
b'\x16\x03\x03\x04\xba\x02\x00\x04\xb6\x03\x038B\xa5nWB\x11^-\x8a-\x04\xce\xab>\x1b\xef\xa0\xb4mhng~G\x95*\xcb\xcaY\xc6E \xa1\xfa\xac\xf5\xf59\x04\xcaS\x99\xc2{~\x98\x16\xb1\x10\xdb\xea\x15xVW,\x94+\xf21M2V$\x13\x01\x00\x04n\x003\x04dc\x99\x04`\x11\x7f=?j2>\x83\x94(\xd2X\xaf\x19\xfdua\xb8X\x1aB\xd9pWmW\x1b\xd1\xca_[\x18,3\xa7\xd6\xc3\xee\xf7\x84bj^r\xb3]\x04\x1d\x14n\xae\x9e\xe6b\xd5\xa4\xfb\x08\x81|\xc5F>\xd2W2\x0e\xba\xb7\x8cdF\x10\xbe\xb3nIp\x8c\xa4\xb9F\xfb0\xf8/a]r\x17?[\xe4"\x81\x8a\xe1\xceO\x00\x85\xb9h\x8c\xed\xc9N\xa0_\xf8\xfei\xb3\xdf\xa3\x06N\x840\xc3\xc5\xb7\xfcD\xf3\xeb)8\xb8\xb1E\xe8\x8a8\x1a\xc5\xdf\xd1.vW\xd4J\xb2$z-\xb4\xb5^s\xdd}M:\xe3>L\x19Q\x16\x8d\x03@\x92\xf9\x86'

Sending the ClientHello in two separate writes:
b'\x16\x03\x03\x04\xba\x02\x00\x04\xb6\x03\x03\xc1\x86u\xc2x\x11(\x07\x89g\xf7\xfd\x14\xd0~#G\x7f]\x8e\xdey=\xddk\xb3\x7f\x06$\xe1]\x16 \xa1\xfa\xac\xf5\xf59\x04\xcaS\x99\xc2{~\x98\x16\xb1\x10\xdb\xea\x15xVW,\x94+\xf21M2V$\x13\x01\x00\x04n\x003\x04dc\x99\x04`\r\xa2\r\x9a\xdaS/[\x07\x10\xae\xd7\x10\xa5\xac\xe0\x01\xcd\xe4\xfa,\x1f\xd7\x92\x90\x7f\xf0\x9c\xfc\xe6\xacN5z\xf5\xe8\x060\xea\x9c\x02]\t\xec\xa1\x9b1\xdb\x9c\xbbg\xa6\x14FC\xaf\x1d\n\x11\xc6\x82\xb9Y5T\xdc\xd8\xed>\xac\xd5"\xa9r=y\xd4\xcd\x9f\xad\xb5\t\x9c\x1d;\r\xb4W\xd2\xe5]\x0b\x0f\x0fD\x19\xe2H\xa5R\xc79I\xe6\x80\x07\x1f6)\xa8\rOL{>\xe9\xf6\xa9j\x8a\xab\x15Oj9\x9bC\xac\x17\xab\xd0oHJ\'\x10\xfb\xa7\x9c\x13\x94\x0e~\x92a\xc3\x7f\xd5\xaeA\xaa\x0e\x7f\xfb\x80>\xe4c|\xe0\xd7\x90t\xeaIc\n'

Repeating the process with a smaller ClientHello (253 bytes).
This ClientHello would usually be sent in a single packet, but it
demonstrates that the bug is not triggered by the size of the
ClientHello, but whether it comes in across multiple reads.
(Note this ClientHello is smaller than a ClientHello from browsers
today. This script does not reproduce some padding behavior.)

Sending the ClientHello in a single write:
b'\x16\x03\x03\x00z\x02\x00\x00v\x03\x03\\\x0c\xc8X,\xcd\xae\xa1\x14\xb4\xec\xa5u\xfa\x19m=:\x04\xfe\x93\x96\xfd\x84\xba;\xdb\x1d\x1f\xe6%\xf5 \xa1\xfa\xac\xf5\xf59\x04\xcaS\x99\xc2{~\x98\x16\xb1\x10\xdb\xea\x15xVW,\x94+\xf21M2V$\x13\x01\x00\x00.\x003\x00$\x00\x1d\x00 \x91\xaa\xa6\x02\xa5=&\x15\xb1Qe\xda\x01\x942\x1f+7AA\xe6\xf0\x83\x0c\xb36d\x18L\x91\x8dO\x00+\x00\x02\x03\x04\x14\x03\x03\x00\x01\x01\x17\x03\x03\x11\xc6\xee\xf1\xd4H~\xbe\xd8\xf65\x84?\x10\xa2\xc6F\x15)\x9d\xe8\xe6\xe2G;\xfb7Prjh\xa3\x94B\xbc|\xb6~\xde\x8e\xe1\x98\xe0\xda\x89\r; j\x9eq\x89.:IE\xec`\x1aWq\xdc\xa5\xbe\xc9\xd7\x18,\xaaj]rb\x9f\x83\xa1|6b]\xb3\xd7\x1f\xc2\xaa\x9b\x08^ 0s_RUs\xce \xce\x02?\x02\x06\xbd\xa8\x96\xb6\x857K\xc9x\x83\xa2K\xf4\x7f1\x9a\xc3{'

Sending the ClientHello in two separate writes:
b'\x16\x03\x03\x00z\x02\x00\x00v\x03\x03\x17\nN4k/0\xed\xc9\xbb%{\xe3\xc7\xd0\xcc\xf4I\x92!\r\x1f\xdeB\xa2\xc9\x88\xc9=\xbc\xc0u \xa1\xfa\xac\xf5\xf59\x04\xcaS\x99\xc2{~\x98\x16\xb1\x10\xdb\xea\x15xVW,\x94+\xf21M2V$\x13\x01\x00\x00.\x003\x00$\x00\x1d\x00 M\xcd\xf8\x8e\x83\x17\xdb\xb9\x03l\xedHD\xb6\x14\xcd:P\xce\xd8\xeb\xbb\xee\xb5\xfc/\\\xb7\x81\xc1\rw\x00+\x00\x02\x03\x04\x14\x03\x03\x00\x01\x01\x17\x03\x03\x11\xc6\xf5^]\xcb\xa7\xf9\xc0>\xfe\\\xc1[\xfa\xe7\xeep\xc0\xdbs\xc47\x82\xb1\x18z\xfen\xb0E\x01\xc5\xef\xae\x8c\xf3o\x07\x18o\x8d\xe4\xd6\xae\xefi\x85\x99\xc3\xff\xd8\xb6j\xf3\xb11;\xa6\x9e\x1f-8!\xf9\x00\xbaI\xebI\x91\xee\xdcp\x10n\xe5\xf1\x81\xbf\xb8O\xd5\xbaaB\xe5\xce\x1e9[\xe8;s\x1eBHs^TPT\xbdO\x92\xe6\xe4\xc4-\xd8\xb3\x08m\n\xdaBu.\xa2\xfa'

priceguru Passed
---------------------------------------------------
python3 tldr_fail_test.py myjob.mu
About to send a large TLS ClientHello (1471 bytes) to myjob.mu:443.

The server should respond with a TLS ServerHello, which will be some
byte string beginning with b'\x16\x03\x03'. If it closes the
connection or sends something else, the server is misbehaving.

Sending the ClientHello in a single write:
b'\x16\x03\x03\x00c\x02\x00\x00_\x03\x03\x9c3`\xaa\xe8\xdd\xef\xc3\x9e\x153^\xa5\xc4j5\xc1LUw\xf2\x059\x94=]\xfa\xe5\xa3\x988\x01 \xdaM\x8c\xb6}\x86s\xd9e}}\x83\x06\xe3\xfc\xa7\xa0o\xb5\xf59{ho\xb4\x8c\xbb!W\xe8_\xb0\xc0/\x00\x00\x17\x00\x00\x00\x00\x00\x0b\x00\x02\x01\x00\xff\x01\x00\x01\x00\x00#\x00\x00\x00\x17\x00\x00\x16\x03\x03\x13S\x0b\x00\x13O\x00\x13L\x00\x05\xcf0\x82\x05\xcb0\x82\x04\xb3\xa0\x03\x02\x01\x02\x02\x10\x07\xb2\xc6\xd9\x82\x8f\x13c\x9d\xde,\xf0\x97\x1e@10\r\x06\t*\x86H\x86\xf7\r\x01\x01\x0b\x05\x000<1\x0b0\t\x06\x03U\x04\x06\x13\x02US1\x0f0\r\x06\x03U\x04\n\x13\x06Amazon1\x1c0\x1a\x06\x03U\x04\x03\x13\x13Amazon RSA 2048 M010\x1e\x17\r230201000000Z\x17\r2402292359'

Sending the ClientHello in two separate writes:
b'\x16\x03\x03\x00c\x02\x00\x00_\x03\x03\xd5\x07\x1a9\xc2O\x14=\xe4\xfa\xaf\xa8\x0c\xca\xa1.\x08\xe3\x1a\xa1>7v\xae\xe9\x1fK\xa32K\x87\xfb t\\\x7f\xa4\x02\xc7\xc6?\xb8\r\xb2\x17\xadr9b\x1b\xcdA\x96\x92\xaa\xe5*M\xfe\xc8c\x97\xa2\x8c\x0c\xc0/\x00\x00\x17\x00\x00\x00\x00\x00\x0b\x00\x02\x01\x00\xff\x01\x00\x01\x00\x00#\x00\x00\x00\x17\x00\x00\x16\x03\x03\x13S\x0b\x00\x13O\x00\x13L\x00\x05\xcf0\x82\x05\xcb0\x82\x04\xb3\xa0\x03\x02\x01\x02\x02\x10\x07\xb2\xc6\xd9\x82\x8f\x13c\x9d\xde,\xf0\x97\x1e@10\r\x06\t*\x86H\x86\xf7\r\x01\x01\x0b\x05\x000<1\x0b0\t\x06\x03U\x04\x06\x13\x02US1\x0f0\r\x06\x03U\x04\n\x13\x06Amazon1\x1c0\x1a\x06\x03U\x04\x03\x13\x13Amazon RSA 2048 M010\x1e\x17\r230201000000Z\x17\r2402292359'

Repeating the process with a smaller ClientHello (249 bytes).
This ClientHello would usually be sent in a single packet, but it
demonstrates that the bug is not triggered by the size of the
ClientHello, but whether it comes in across multiple reads.
(Note this ClientHello is smaller than a ClientHello from browsers
today. This script does not reproduce some padding behavior.)

Sending the ClientHello in a single write:
b'\x16\x03\x03\x00c\x02\x00\x00_\x03\x03\xfe\xaf+\x04@\x1c\x9cR)AG\xb6\'\x87_\xe6\x1e\xbc\x99\xc8\xdf\xee\xe2\xc7\x83\xf0\xcfU\xf0\xbe\xe1\x92 cq\xeb\xe1Z\x95\xff\xb98\x8cPT"H,\xc9\x8a\xc7\xb9\x05w\xa6\x04A\xb8r\xfc(\xf2(\x9a,\xc0/\x00\x00\x17\x00\x00\x00\x00\x00\x0b\x00\x02\x01\x00\xff\x01\x00\x01\x00\x00#\x00\x00\x00\x17\x00\x00\x16\x03\x03\x13S\x0b\x00\x13O\x00\x13L\x00\x05\xcf0\x82\x05\xcb0\x82\x04\xb3\xa0\x03\x02\x01\x02\x02\x10\x07\xb2\xc6\xd9\x82\x8f\x13c\x9d\xde,\xf0\x97\x1e@10\r\x06\t*\x86H\x86\xf7\r\x01\x01\x0b\x05\x000<1\x0b0\t\x06\x03U\x04\x06\x13\x02US1\x0f0\r\x06\x03U\x04\n\x13\x06Amazon1\x1c0\x1a\x06\x03U\x04\x03\x13\x13Amazon RSA 2048 M010\x1e\x17\r230201000000Z\x17\r2402292359'

Sending the ClientHello in two separate writes:
b'\x16\x03\x03\x00c\x02\x00\x00_\x03\x03dSg\xaeK\xb5\xbb\xb9>\xf4\x1c\x85\xb0U\x91\xa8*\x153\xbc_\xe2\x01d|\xa06ud\xe0@\\ *t\x0b\x13\xbf\xa07\xba\xf8]\xefE\xbek\xce(\x0e\x95\xb8s\xc8\xad\xa2\x8b2\xc1\xa8\xe4}\xc7\xff\xd5\xc0/\x00\x00\x17\x00\x00\x00\x00\x00\x0b\x00\x02\x01\x00\xff\x01\x00\x01\x00\x00#\x00\x00\x00\x17\x00\x00\x16\x03\x03\x13S\x0b\x00\x13O\x00\x13L\x00\x05\xcf0\x82\x05\xcb0\x82\x04\xb3\xa0\x03\x02\x01\x02\x02\x10\x07\xb2\xc6\xd9\x82\x8f\x13c\x9d\xde,\xf0\x97\x1e@10\r\x06\t*\x86H\x86\xf7\r\x01\x01\x0b\x05\x000<1\x0b0\t\x06\x03U\x04\x06\x13\x02US1\x0f0\r\x06\x03U\x04\n\x13\x06Amazon1\x1c0\x1a\x06\x03U\x04\x03\x13\x13Amazon RSA 2048 M010\x1e\x17\r230201000000Z\x17\r2402292359'

myjob.mu Passed
---------------------------------------------------
python3 tldr_fail_test.py mauritiustelecom.com
About to send a large TLS ClientHello (1483 bytes) to mauritiustelecom.com:443.

The server should respond with a TLS ServerHello, which will be some
byte string beginning with b'\x16\x03\x03'. If it closes the
connection or sends something else, the server is misbehaving.

Sending the ClientHello in a single write:
Traceback (most recent call last):
  File "C:\Users\atish\Desktop\Programming\TLDR Fail\tldr_fail_test.py", line 139, in <module>
    sock = socket.create_connection(addr)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.11_3.11.2032.0_x64__qbz5n2kfra8p0\Lib\socket.py", line 851, in create_connection
    raise exceptions[0]
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.11_3.11.2032.0_x64__qbz5n2kfra8p0\Lib\socket.py", line 836, in create_connection
    sock.connect(sa)
TimeoutError: [WinError 10060] A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond

mauritiustelecom.com Failed
---------------------------------------------------
python3 tldr_fail_test.py gceguide.com
About to send a large TLS ClientHello (1475 bytes) to gceguide.com:443.

The server should respond with a TLS ServerHello, which will be some
byte string beginning with b'\x16\x03\x03'. If it closes the
connection or sends something else, the server is misbehaving.

Sending the ClientHello in a single write:
b'\x16\x03\x03\x04\xba\x02\x00\x04\xb6\x03\x03r\xact\x80\xc3\x88\xbe\x89\xc0t\x18{7+\xe6\xf5\x13\xfe\xf4UH\x97\x90\x9e\xfcJ\x97\x96\xcdE(\xa1 \xa1\xfa\xac\xf5\xf59\x04\xcaS\x99\xc2{~\x98\x16\xb1\x10\xdb\xea\x15xVW,\x94+\xf21M2V$\x13\x01\x00\x04n\x003\x04dc\x99\x04`\'\xa4\x1bJ\xf8\xe4~\x15\x98\xfc\x12|\xe65!\x18\xce:\x1a\\\xb3\x00\x9a\xbb\xf3\xb8\x03\xbf\xaa.\'C\xf8\xcc\x86A]\xacD\xddA\xe5\x17K\x87M\x96\xaf\xba\x1b2.c"E\x13k\x80\xa5\xac\xd2\xfd\x85\xf1\x02\x0fw1\x85%t\x84\x07\xcc\x1f\xca6\x94\xe9\xb0\xd9\x06\x00z\x11\x83e\xca\x9b\xdd$\x16\x11)`\xd5\xa9\xb8\x1c\x0c\xdf\x99\xda\x0e\ti\x06CA\x82\xafzk\x89\x00\x9dD\x7fy\xc1\x0f~\xac\xc5A\xb9\xecM\x1a/O\x99\x14PN)*Y\x9b\xb6\x86s\xec\x95\xd1\xdb\xf6\xd5\xc1\xa3\xad\x95\xec\xf9+H\x11c\x84\x92\xf2K\x8b\xe6!\td'

Sending the ClientHello in two separate writes:
b'\x16\x03\x03\x04\xba\x02\x00\x04\xb6\x03\x03!\xef\xbb\xdc9K\x82Z&X\xd8\xf2\xa8Tv\xe2\rh\xad]\x1d~/B\xcf\x0c(=3\xc5\xa2i \xa1\xfa\xac\xf5\xf59\x04\xcaS\x99\xc2{~\x98\x16\xb1\x10\xdb\xea\x15xVW,\x94+\xf21M2V$\x13\x01\x00\x04n\x003\x04dc\x99\x04`\x8a\xbb\xf9oy\xdb\x89\xdd\xb8\xa5A\xa5-bQ@\xabU\xe9\xe1\x97(\x0bj\xd3\xe4\xbe\x1f\x9f\xdbWv\x08\x90\xe0\x9e\x8b\xd1\xa9\xc4\xf0\xd3n\xa5\xbf\x99\x9f5pF\x899\xbfI\x04w7\x92\xc2"j/\xe7<\xc5#+\x0c\xb0\xd7\x80\x15%#\x8b\xf7_\xaft\xdd\xb5(4f\xe5\xb3\xbe\x04\\C)\xda\xd0\xc1\xb3m\xdb\x16\xb3(f\xae,\x95\x1431bb\xe2S\x8f#\xe0\x9b\x02\xb0;\xfd/\x89\xdbVUX#g,\xbe \xe5\xe0\xffu\xb1\x9f\x9d/0h\x0e\xfeXl\x99#12\xe1\xd4-\x86\x19]\xa3\xda7\xdc\'2$mPt5\xd7\xfa'

Repeating the process with a smaller ClientHello (253 bytes).
This ClientHello would usually be sent in a single packet, but it
demonstrates that the bug is not triggered by the size of the
ClientHello, but whether it comes in across multiple reads.
(Note this ClientHello is smaller than a ClientHello from browsers
today. This script does not reproduce some padding behavior.)

Sending the ClientHello in a single write:
b"\x16\x03\x03\x00z\x02\x00\x00v\x03\x03\xcdw\x95{\xa7\x83\xe9\xd1\x1a\xa4Y#\x90\xa8}\xf2\xa3\xda\x11\x8a\x0fcy6j<-\xb4,\xfc\x8c\xbb \xa1\xfa\xac\xf5\xf59\x04\xcaS\x99\xc2{~\x98\x16\xb1\x10\xdb\xea\x15xVW,\x94+\xf21M2V$\x13\x01\x00\x00.\x003\x00$\x00\x1d\x00 \x8d\xf8=\xaaoO\xd7B\x0b\xdfX\xd2\xea\xf7\x1e\xa2\xbbf\x93\x1fV\x85A4R\x91Y\xaak{\xf8%\x00+\x00\x02\x03\x04\x14\x03\x03\x00\x01\x01\x17\x03\x03\x10\xc8#\r\xd0L\xb6f\xe3\xd82b\x9an\xe9q_\xcd\xc9#i\xbc\x855\xabL\xbejZ\xa6\xf6\xa5E\xd8V\xd4K\xaf\x8e\xde\x7f\xd3\xa9\x88\x8c\x85\xad\x0f\xa3\xa4\xfe\xf4$\xcc\x95\xba\x7f\xe2\x12]O\x96\xa87\x92w\xbc&!u\xe5\xd6\xcb\xe56\n\xa5u\r'\x8c\x83\xab%gW\xbf\x10\x17Y|h[\x81\x15\na6\x8d\xa8\x0b~\x1b\xac\xb6\xbdJ\x86\xcb\x10\xd5\xb1C\xd1]\x87\xb2\x0ez\xe0"

Sending the ClientHello in two separate writes:
b'\x16\x03\x03\x00z\x02\x00\x00v\x03\x03\xb0\x15\xe7\xaf\x1f\xe5\xaa\x9a\xf8\x8b\x0b\xe4\xba`@\x12\x805\xbf\xc9uo\x98\x08\x04\xb0\xeco\x95\xe6\xf2\x98 \xa1\xfa\xac\xf5\xf59\x04\xcaS\x99\xc2{~\x98\x16\xb1\x10\xdb\xea\x15xVW,\x94+\xf21M2V$\x13\x01\x00\x00.\x003\x00$\x00\x1d\x00 \x82\xd5\x06\xe7D\xc10\x08Z\x9f\x1aV\xb3\xb4[>O.e\xc7Zv)1\xca\xb7\xdf`\xedA\xea>\x00+\x00\x02\x03\x04\x14\x03\x03\x00\x01\x01\x17\x03\x03\x10\xc8\x9d\xebu}\xdfV9\xccr\xb9\xba>\xde2\x84\xcc\xe3%\x06\xa3&\xa5\x1fLL5\xbd\xfc\x0f\xa9\xb7\xac\xcb\xc8\x06\xe93\x93v2|n53.~=\xa4\xea\xcfn\x8b\xdfo\xdfq\x12(\x9c\x0e\x99\xcbIz\xac\x0b\x86\x7f\x96\xa9\xf1\x17\x8c0\xefQ\xc1\xb8J\xf3\x8e\xdd\xf7SD/\x15Ap\xfb\xf6?\n\xa4\xd2\x87`K\x8a~I\xcb\x9au\xd1\xfcZ\xd8\xd4\x825\xa5\x90\x03I\x9a\x7f\x95'

gceguide.com Passed
---------------------------------------------------
python3 tldr_fail_test.py vbazz.com
About to send a large TLS ClientHello (1472 bytes) to vbazz.com:443.

The server should respond with a TLS ServerHello, which will be some
byte string beginning with b'\x16\x03\x03'. If it closes the
connection or sends something else, the server is misbehaving.

Sending the ClientHello in a single write:
b'\x16\x03\x03\x04\xba\x02\x00\x04\xb6\x03\x03Gg\xf7\xbe\xee\xb8\x97\xbfk\xe9q5\xad\xab\xa4M7v/\x93\xc4\xf5\xca\xb5\xcfEa}\xa1)M\xb8 \xa1\xfa\xac\xf5\xf59\x04\xcaS\x99\xc2{~\x98\x16\xb1\x10\xdb\xea\x15xVW,\x94+\xf21M2V$\x13\x01\x00\x04n\x003\x04dc\x99\x04`.}v4\x9dE\xaa\x07\xf6\x18\x10]:\x98\x82\xab_H\xcd\xbd\x0b{t\xd7\xec\xb23\xe9\xa0lRI\xfc"\x14F\x08\xc8\xba~\x16gi\x95O\xca\x93\xc9\xec\xab<\x12xQqf\x01\x15\xd9\xfe\xae\x99\xaa\x10]\xd8\xe5\xac\xb0\xf9/\xce\x19N\\\x04\xf6n\xb9$\xc5\x8d\xcb%\xed&\t\xb6`m\xca\x7f$\xff\x18dE\\\x02\xc9\x16\x92\x93B\x08m\xd7\x92Z\xf1\x96\xb0^xm\xcd\x15z\\N\xd1\xa1\xd6;\xae)?+Y\x9aB\x1d)\xd9#6\xd68\xf0\xa5f\x07\x0786\xfc\xc5(\xafIA_E\xe8\x0f%\xc63\xf0\xc7S(5\x17|s\x1a'

Sending the ClientHello in two separate writes:
b'\x16\x03\x03\x04\xba\x02\x00\x04\xb6\x03\x03r\x87G\xbfN\xfeg*\xac)\x0f\xf4\x12"\xb2\x05\x1a$a\x06X\xc9\x95I"\xfbC\xa2\xe1\x85\x1d\xc7 \xa1\xfa\xac\xf5\xf59\x04\xcaS\x99\xc2{~\x98\x16\xb1\x10\xdb\xea\x15xVW,\x94+\xf21M2V$\x13\x01\x00\x04n\x003\x04dc\x99\x04`\x89\xa7[\x9f\xa0\xb4\x8a\x04s\xf5;\x9bd\x0fw\x87\xbb\xcf\xf4\re\xd4X\xf6Lb7\xda\xc5\x9c\xa3N~\xbf\xb1\xe0\xfa\x83*\xc9!#\xc1nTaR\xef\xca\x8f\x08\xe3A\xeaQ\xe7\xd2*\x8cQ\x81\xdd\xdc9>YJS\x1f\xf2n\xb3O`I\x98[AG\x08$\xc9?Z0u\xd3\xe2\xa1\x98\x93n\x1c\xf1_\xff\x9e\xb2\xb1\x15I`\xa5\xa9s\xdf\x05\x1d#\xd8\xc4\xe8\x9d\xf0\xf8Z\x9c*\x83\xcb\xf1\xba\xa2\x86y\xb9\x94\xf2\x8d-\x03\x07hTs\xddr\xcaW\xd2\xb8\xda\xab\xcc\xec\x8e\x8b\x8f\xb9r\x94\xbe\xeb\xef\x98VK+\xe4\x16\'\xc6\x08\x13]\x03\x9d'

Repeating the process with a smaller ClientHello (250 bytes).
This ClientHello would usually be sent in a single packet, but it
demonstrates that the bug is not triggered by the size of the
ClientHello, but whether it comes in across multiple reads.
(Note this ClientHello is smaller than a ClientHello from browsers
today. This script does not reproduce some padding behavior.)

Sending the ClientHello in a single write:
b'\x16\x03\x03\x00z\x02\x00\x00v\x03\x03<\xa3\xe3\xb9\xcf*\x10\xa3bk\xa8\xed\x8a*\x89\x91\xf1<p"\x04At\xb9\xacN\x1e\xdfC{\x06\xef \xa1\xfa\xac\xf5\xf59\x04\xcaS\x99\xc2{~\x98\x16\xb1\x10\xdb\xea\x15xVW,\x94+\xf21M2V$\x13\x01\x00\x00.\x003\x00$\x00\x1d\x00 \xce\xa2\xa4|\xd0\x19\xec^\xad\x8aU\x96\xf8@\x8d\xd4\xb0\\\x88\xa0Ij\x1e\xa4\xec\x13\xdb&\xc1\x17\xeaR\x00+\x00\x02\x03\x04\x14\x03\x03\x00\x01\x01\x17\x03\x03\t\xa5\xcc\x15\x16\xd1\x94 \x82\x07\x06\xb7\x19\x12\x17\xceTu\x9c]\x96\xd0\x14^\x0c\xdfG\xed\xb7\xd1N\xd6\xda\x0fy\xbbI%2\xff\xac\xa2\xfet`G\x8f\x9e\xee\x80\xb2\x8a\xeb\x0c \xe3\xfc\xee\xf0\x93\xea\xda;Nz@\xd4\xa5I\x9cG\x05\x87*[+2\xfb\x07\xae\x96\xaf\x92l\xa8\xbaj`,\x844\x85\xf2"ag\xd4\r\xfd\x97\xc6\x11#r?>\xde\xbb\xe0\xbd\xa8x\x85\xfe\xfa\xa5\xd7\xf1\xf2\xd7'

Sending the ClientHello in two separate writes:
b'\x16\x03\x03\x00z\x02\x00\x00v\x03\x03\xe4`;\xa5\x9d\x81L\xd5YYS\x03\xdd\x15T\x98Y\x06|De\xa7m\xf7\xfd\xf7\x9fb\x92\xce\x044 \xa1\xfa\xac\xf5\xf59\x04\xcaS\x99\xc2{~\x98\x16\xb1\x10\xdb\xea\x15xVW,\x94+\xf21M2V$\x13\x01\x00\x00.\x003\x00$\x00\x1d\x00 ~LK\xa5G\x9b\xca<\xd4\x8b\xa4\x91\x1eK\x00\xc1\xa8x\x86=\x04\xb0\xf4\xc5\x15=\x9b)\xa9\x88\xe93\x00+\x00\x02\x03\x04\x14\x03\x03\x00\x01\x01\x17\x03\x03\t\xa5\x9f\x14\xe7p\xf2\x0f\xb1\xa9z\xf96\x8c\xec\x03\x8b\xbc""\x80;\xbc\xdd\xc4\xcfA\x01\xdb\xf7\xba\x93\xea%\xd6\x8b?\xaf\xcc\xf9-\xa3\x13\x1a\x9c\xae\xd8\xc9\xf5 \xb3>\xb8\xec\x91\xd6R\xfa\xdd\x8f\xb8h\xa6\xed\x9b\xf4]\x07_A8K\xe13\x9b(\x97\x8aZ\xb2o\x9a0Y"8\xb7C\x97 \'\x7f\xb1{E\xe9\xf4\xcf\xbf\xac\xb1\xa3\xf8P5\xc8\xb6\xd9\xf0d\xf5\xf7\x9crz\xf9\xc3\xa2\x1a\xb0'

vbazz.com Passed
---------------------------------------------------